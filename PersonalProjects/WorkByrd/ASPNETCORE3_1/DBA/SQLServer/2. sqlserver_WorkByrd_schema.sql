USE master;

IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = N'WorkByrd')
BEGIN
	CREATE DATABASE WorkByrd;
END
GO

USE WorkByrd;

/*************************************************************************START AspNetUsers*************************************************************************/
--AUTO-GENERATED BY ENTITY FRAMEWORK
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUsers')
BEGIN
	CREATE TABLE [AspNetUsers] (
        [Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [FirstName] nvarchar(256) NULL,
        [LastName] nvarchar(256) NULL,
        [UserName] nvarchar(256) NULL,
        [NormalizedUserName] nvarchar(256) NULL,
        [Email] nvarchar(256) NULL,
        [NormalizedEmail] nvarchar(256) NULL,
        [EmailConfirmed] bit NOT NULL,
        [PasswordHash] nvarchar(max) NULL,
        [SecurityStamp] nvarchar(max) NULL,
        [ConcurrencyStamp] nvarchar(max) NULL,
        [PhoneNumber] varchar(100) NULL,
        [PhoneNumberConfirmed] bit NOT NULL,
        [TwoFactorEnabled] bit NOT NULL,
        [LockoutEnd] datetimeoffset NULL,
        [LockoutEnabled] bit NOT NULL,
        [AccessFailedCount] int NOT NULL,
        CONSTRAINT [PK_AspNetUsers] PRIMARY KEY CLUSTERED
		(
			[Id]
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
    ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];
END
GO
/*************************************************************************EBD AspNetUsers*************************************************************************/

/*************************************************************************START AspNetUsersHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUsersHistory')
BEGIN

	CREATE TABLE [AspNetUsersHistory] (
		[Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [AspNetUsers_Id] varchar(36) NOT NULL,
        [FirstName] nvarchar(256) NULL,
        [LastName] nvarchar(256) NULL,
        [UserName] nvarchar(256) NULL,
        [NormalizedUserName] nvarchar(256) NULL,
        [Email] nvarchar(256) NULL,
        [NormalizedEmail] nvarchar(256) NULL,
        [EmailConfirmed] bit NOT NULL,
        [PasswordHash] nvarchar(max) NULL,
        [SecurityStamp] nvarchar(max) NULL,
        [ConcurrencyStamp] nvarchar(max) NULL,
        [PhoneNumber] nvarchar(100) NULL,
        [PhoneNumberConfirmed] bit NULL,
        [TwoFactorEnabled] bit NULL,
        [LockoutEnd] datetimeoffset NULL,
        [LockoutEnabled] bit NULL,
        [AccessFailedCount] int NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_AspNetUsersHistory] PRIMARY KEY CLUSTERED 
		(
			Id ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUsersHistory*************************************************************************/

/*************************************************************************START AspNetRoles*************************************************************************/
--AUTO-GENERATED BY ENTITY FRAMEWORK
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetRoles')
BEGIN
	CREATE TABLE [AspNetRoles] (
        [Id] varchar(36) NOT NULL DEFAULT (LOWER(NEWID())),
        [Name] nvarchar(256) NULL,
        [NormalizedName] nvarchar(256) NULL,
        [ConcurrencyStamp] nvarchar(max) NULL,
        CONSTRAINT [PK_AspNetRoles] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetRoles*************************************************************************/

/*************************************************************************START AspNetRolesHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetRolesHistory')
BEGIN
	CREATE TABLE [AspNetRolesHistory] (
        [Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[AspNetRoles_Id] varchar(36) NOT NULL,
        [Name] nvarchar(256) NULL,
        [NormalizedName] nvarchar(256) NULL,
        [ConcurrencyStamp] nvarchar(max) NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_AspNetRolesHistory] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetRolesHistory*************************************************************************/

/*************************************************************************START AspNetUserClaims*************************************************************************/
--AUTO-GENERATED BY ENTITY FRAMEWORK
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserClaims')
BEGIN
	CREATE TABLE [AspNetUserClaims] (
        [Id] int NOT NULL IDENTITY(1,1),
        [UserId] varchar(36) NOT NULL,
        [ClaimType] nvarchar(max) NULL,
        [ClaimValue] nvarchar(max) NULL,
		CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [AspNetUsers] (Id) ON DELETE CASCADE
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserClaims*************************************************************************/

/*************************************************************************START AspNetUserClaimsHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserClaimsHistory')
BEGIN
	CREATE TABLE [AspNetUserClaimsHistory] (
        [Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[AspNetUserClaims_Id] int NOT NULL,
        [UserId] varchar(36) NOT NULL,
        [ClaimType] nvarchar(max) NULL,
        [ClaimValue] nvarchar(max) NULL,
		[LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_AspNetUserClaimsHistory] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserClaimsHistory*************************************************************************/

/*************************************************************************START AspNetUserLogins*************************************************************************/
--AUTO-GENERATED BY ENTITY FRAMEWORK
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserLogins')
BEGIN
	CREATE TABLE [AspNetUserLogins] (
        [LoginProvider] nvarchar(256) NOT NULL,
        [ProviderKey] nvarchar(256) NOT NULL,
        [ProviderDisplayName] nvarchar(256) NULL,
        [UserId] varchar(36) NOT NULL,
		CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY CLUSTERED 
		(
			[LoginProvider] ASC,
			[ProviderKey] ASC,
			[UserId] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserLogins*************************************************************************/

/*************************************************************************START AspNetUserLoginsHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserLoginsHistory')
BEGIN
	CREATE TABLE [AspNetUserLoginsHistory] (
		[ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [LoginProvider] nvarchar(256) NOT NULL,
        [ProviderKey] nvarchar(256) NOT NULL,
        [ProviderDisplayName] nvarchar(256) NULL,
        [UserId] varchar(36) NOT NULL,
		[LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_AspNetUserLoginsHistory] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserLoginsHistory*************************************************************************/

/*************************************************************************START AspNetUserRoles*************************************************************************/
--AUTO-GENERATED BY ENTITY FRAMEWORK
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserRoles')
BEGIN
	CREATE TABLE [AspNetUserRoles] (
        [UserId] varchar(36) NOT NULL,
        [RoleId] varchar(36) NOT NULL,
		CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY CLUSTERED 
		(
			[UserId] ASC, 
			[RoleId] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY([RoleId]) REFERENCES AspNetRoles ([Id]) ON DELETE CASCADE,
		CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY([UserId]) REFERENCES AspNetUsers ([Id]) ON DELETE CASCADE
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserRoles*************************************************************************/

/*************************************************************************START AspNetUserRolesHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserRolesHistory')
BEGIN
	CREATE TABLE [AspNetUserRolesHistory] (
		[Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [AspNetUserRoles_UserId] varchar(36) NOT NULL,
        [AspNetUserRoles_RoleId] varchar(36) NOT NULL,
		[LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_AspNetUserRolesHistory] PRIMARY KEY CLUSTERED 
		(
			[Id] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserRolesHistory*************************************************************************/

/*************************************************************************START AspNetUserTokens*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserTokens')
BEGIN
	CREATE TABLE [AspNetUserTokens] (
        [UserId] varchar(36) NOT NULL,
        [LoginProvider] nvarchar(256) NOT NULL,
        [Name] nvarchar(256) NOT NULL,
        [Value] nvarchar(max) NULL,
        CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY (
			[UserId], 
			[LoginProvider], 
			[Name]
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
        CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
    ) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserTokens*************************************************************************/

/*************************************************************************START AspNetUserTokensHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetUserTokensHistory')
BEGIN
	CREATE TABLE [AspNetUserTokensHistory] (
		[Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [UserId] varchar(36) NOT NULL,
        [LoginProvider] nvarchar(256) NOT NULL,
        [Name] nvarchar(256) NOT NULL,
        [Value] nvarchar(max) NULL,
		[LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
        CONSTRAINT [PK_AspNetUserTokensHistory] PRIMARY KEY CLUSTERED (
			[Id]
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
    ) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetUserTokensHistory*************************************************************************/

/*************************************************************************START AspNetRoleClaims*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetRoleClaims')
BEGIN
	CREATE TABLE [AspNetRoleClaims] (
        [Id] int NOT NULL IDENTITY(1,1),
        [RoleId] varchar(36) NOT NULL,
        [ClaimType] nvarchar(max) NULL,
        [ClaimValue] nvarchar(max) NULL,
        CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY CLUSTERED(
			[Id]		
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
        CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
    ) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetRoleClaims*************************************************************************/

/*************************************************************************START AspNetRoleClaimsHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'AspNetRoleClaimsHistory')
BEGIN
	CREATE TABLE [AspNetRoleClaimsHistory] (
        [Id] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [AspNetRoleClaims_Id] int NOT NULL,
        [RoleId] varchar(36) NOT NULL,
        [ClaimType] nvarchar(max) NULL,
        [ClaimValue] nvarchar(max) NULL,
		[LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
        CONSTRAINT [PK_AspNetRoleClaimsHistory] PRIMARY KEY CLUSTERED (
			[Id]		
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
    ) ON [PRIMARY];
END
GO
/*************************************************************************END AspNetRoleClaimsHistory*************************************************************************/

/*************************************************************************START WorkByrdLog*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'WorkByrdLog')
BEGIN
	CREATE TABLE [WorkByrdLog] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [sMessage] nvarchar(max) NULL,
        [sExceptionStackTrace] nvarchar(max) NULL,
        [sInnerException] nvarchar(max) NULL,
        [dtCreatedUTC] datetime2 NOT NULL,
        [iEntryPoint] int NULL,
        [sLocation] nvarchar(1000) NULL,
        [iLogLevel] int NULL,
        [UserID] varchar(36) NULL DEFAULT(''), --which user experienced the issue...
		CONSTRAINT [PK_WorkByrdLog] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END WorkByrdLog*************************************************************************/

/*************************************************************************START TimeZone*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TimeZone')
BEGIN
	CREATE TABLE [TimeZone] (
        [ID] bigint NOT NULL IDENTITY(1,1),
        [sAbbreviation] nvarchar(10) NOT NULL,
        [sName] nvarchar(256) NOT NULL,
        [sUTCOffset] nvarchar(10) NOT NULL,
        [bActive] bit NOT NULL DEFAULT(0),
        [ChangedByUserID] nvarchar(256) NOT NULL DEFAULT(''),
		CONSTRAINT [PK_TimeZone] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END TimeZone*************************************************************************/

/*************************************************************************START TimeZoneHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TimeZoneHistory')
BEGIN
	CREATE TABLE [TimeZoneHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [TimeZone_ID] bigint NOT NULL,
        [sAbbreviation] nvarchar(10) NULL,
        [sName] nvarchar(256) NULL,
        [sUTCOffset] nvarchar(10) NULL,
        [bActive] bit NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_TimeZoneHistory] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END TimeZoneHistory*************************************************************************/

/*************************************************************************START Continent*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Continent')
BEGIN
	CREATE TABLE [Continent] (
		[ID] bigint IDENTITY(1,1) NOT NULL,
		[sName] varchar(256) NOT NULL,
		CONSTRAINT [PK_Continent] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO
/*************************************************************************END Continent*************************************************************************/

/*************************************************************************START Country*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Country')
BEGIN
	CREATE TABLE [Country] (
        [ID] bigint IDENTITY(1,1) NOT NULL,
        [sName] nvarchar(256) NOT NULL,
        [sAbbreviation] nvarchar(10) NOT NULL,
        [fkContinentID] bigint NOT NULL,
        [bActive] bit NOT NULL DEFAULT(0), --allow us to control when certain countries become active or not within the system
		CONSTRAINT [PK_Country] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT [FK_Country_Continent_ID] FOREIGN KEY([fkContinentID]) REFERENCES Continent ([ID])
	) ON [PRIMARY];
END
GO
/*************************************************************************END Country*************************************************************************/

/*************************************************************************START CountryHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CountryHistory')
BEGIN
	CREATE TABLE [CountryHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[Country_ID] bigint NOT NULL,
        [sName] nvarchar(256) NULL,
        [sAbbreviation] nvarchar(5) NULL,
        [fkContinentID] bigint NOT NULL,
        [bActive] bit NOT NULL, --allow us to control when certain countries become active or not within the system
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_CountryHistory] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END CountryHistory*************************************************************************/

/*************************************************************************START StateProvince*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'StateProvince')
BEGIN
	CREATE TABLE [StateProvince] (
        [ID] bigint NOT NULL IDENTITY(1,1),
        [sName] nvarchar(256) NOT NULL,
        [sAbbreviation] nvarchar(5) NOT NULL,
        [fkCountryID] bigint NOT NULL,
		[bHasTaxNexus] bit NOT NULL DEFAULT(0),
		CONSTRAINT [PK_StateProvince] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT FK_StateProvince_Country_ID FOREIGN KEY([fkCountryID]) REFERENCES Country ([ID])
	)
END
GO
/*************************************************************************END StateProvince*************************************************************************/

/*************************************************************************START StateProvinceHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'StateProvinceHistory')
BEGIN
	CREATE TABLE [StateProvinceHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[StateProvince_ID] bigint NOT NULL,
        [sName] nvarchar(256) NOT NULL,
        [sAbbreviation] nvarchar(5) NOT NULL,
        [fkCountryID] bigint NOT NULL,
		[bHasTaxNexus] bit NOT NULL DEFAULT(0),
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_StateProvinceHistory] PRIMARY KEY CLUSTERED
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	)
END
GO
/*************************************************************************END StateProvince*************************************************************************/

/*************************************************************************START Company*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Company')
BEGIN
	CREATE TABLE [Company] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [sName] nvarchar(256) NOT NULL,
        [sPhone] nvarchar(100) NULL,
        [sEmail] nvarchar(256) NOT NULL,
        [bEmailConfirmed] bit NOT NULL DEFAULT(0),
        [sAddressLine1] nvarchar(256) NOT NULL,
        [sAddressLine2] nvarchar(256) NULL,
        [sAddressLine3] nvarchar(256) NULL,
        [sCity] nvarchar(256) NOT NULL,
        [fkStateProvinceID] bigint NOT NULL, --we can infer country from this...
        [sZipCode] nvarchar(25) NOT NULL,
        [sURL] nvarchar(256) NULL,
        [sBusinessHours] nvarchar(1000) NULL,
        [fkTimeZoneID] bigint NOT NULL,
		[sStripeCustomerID] varchar(50) NULL,
        [sStripeCreateCustomerDetails] varchar(MAX) NULL,
        [sSubscriptionType] nvarchar(256) NULL, --EVALUATE
        [dtSubscriptionExpirationUTC] datetime2 NOT NULL,
		CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT unique_Company UNIQUE NONCLUSTERED
		(
			[sName] ASC
		),
		CONSTRAINT [FK_Company_StateProvince_ID] FOREIGN KEY([fkStateProvinceID]) REFERENCES StateProvince ([ID]),
		CONSTRAINT [FK_Company_Timezone_ID] FOREIGN KEY([fkTimeZoneID]) REFERENCES TimeZone ([ID])
	) ON [PRIMARY];
END
GO
/*************************************************************************END Company*************************************************************************/

/*************************************************************************START CompanyHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CompanyHistory')
BEGIN
	CREATE TABLE [CompanyHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[Company_ID] varchar(36) NOT NULL,
        [sName] nvarchar(256) NULL,
        [sPhone] nvarchar(100) NULL,
        [sEmail] nvarchar(256) NULL,
        [bEmailConfirmed] bit NOT NULL,
        [sAddressLine1] nvarchar(256) NULL,
        [sAddressLine2] nvarchar(256) NULL,
        [sAddressLine3] nvarchar(256) NULL,
        [sCity] nvarchar(256) NULL,
        [fkStateProvinceID] bigint NOT NULL, --we can infer country from this...
        [sZipCode] nvarchar(25) NULL,
        [sURL] nvarchar(256) NULL,
        [sBusinessHours] nvarchar(1000) NULL,
        [fkTimeZoneID] bigint NOT NULL,
		[sStripeCustomerID] varchar(50) NULL,
        [sStripeCreateCustomerDetails] varchar(MAX) NULL,
        [sSubscriptionType] nvarchar(256) NULL, --EVALUATE
        [dtSubscriptionExpirationUTC] datetime2 NOT NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_CompanyHistory] PRIMARY KEY CLUSTERED 
		(
			ID ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END CompanyHistory*************************************************************************/

/*************************************************************************START CompanyEmployee*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CompanyEmployee')
BEGIN
	CREATE TABLE [CompanyEmployee] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [fkCompanyID] varchar(36) NOT NULL,
        [fkAspNetUsersID] varchar(36) NOT NULL,
		CONSTRAINT PK_CompanyEmployee PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT [unique_CompanyEmployee] UNIQUE NONCLUSTERED
		(
			[fkCompanyID] ASC,
			[fkAspNetUsersID] ASC
		),
		CONSTRAINT FK_CompanyEmployee_Company_ID FOREIGN KEY([fkCompanyID]) REFERENCES Company ([ID]),
		CONSTRAINT FK_CompanyEmployee_AspNetUsers_Id FOREIGN KEY([fkAspNetUsersID]) REFERENCES AspNetUsers ([Id])
	) ON [PRIMARY];
END
GO
/*************************************************************************END CompanyEmployee*************************************************************************/

/*************************************************************************START CompanyEmployeeHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CompanyEmployeeHistory')
BEGIN
	CREATE TABLE [CompanyEmployeeHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[CompanyEmployee_ID] varchar(36) NOT NULL,
        [fkCompanyID] varchar(36) NULL,
        [fkAspNetUsersID] varchar(36) NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_CompanyEmployeeHistory] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO
/*************************************************************************END CompanyEmployeeHistory*************************************************************************/

/*************************************************************************START StripePaymentMethod*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'StripePaymentMethod')
BEGIN
	CREATE TABLE [StripePaymentMethod] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [fkCompanyID] varchar(36) NOT NULL,
		[sStripeID] varchar(50) NOT NULL,
        [sType] varchar(36) NOT NULL,
		[sBillingEmail] nvarchar(256) NULL,
		[sBillingZipCode] nvarchar(25) NULL,
		[sCardBrand] nvarchar(50) NULL,
		[iCardExpMonth] int NULL,
		[iCardExpYear] int NULL,
		[sCardFundType] varchar(20) NULL,
		[sCardLastFour] varchar(5) NULL,
		[sCardCountry] nvarchar(50) NULL,
		[dtCreatedDateUTC] datetime2 NOT NULL,
		[bActive] bit NOT NULL DEFAULT(0),
		CONSTRAINT PK_StripePaymentMethod PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT FK_StripePaymentMethod_Company_ID FOREIGN KEY([fkCompanyID]) REFERENCES Company ([ID])
	) ON [PRIMARY];
END
GO
/*************************************************************************END StripePaymentMethod*************************************************************************/

/*************************************************************************START StripePaymentMethodHistory*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'StripePaymentMethodHistory')
BEGIN
	CREATE TABLE [StripePaymentMethodHistory] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
		[PaymentMethod_ID] varchar(36) NOT NULL,
        [fkCompanyID] varchar(36) NULL,
		[sStripeID] varchar(50) NULL,
        [sType] varchar(36) NULL,
		[sBillingEmail] nvarchar(256) NULL,
		[sBillingZipCode] nvarchar(25) NULL,
		[sCardBrand] nvarchar(50) NULL,
		[iCardExpMonth] int NULL,
		[iCardExpYear] int NULL,
		[sCardFundType] varchar(20) NULL,
		[sCardLastFour] varchar(5) NULL,
		[sCardCountry] nvarchar(50) NULL,
		[dtCreatedDateUTC] datetime2 NULL,
		[bActive] bit NULL,
        [LastModifiedByUserID] varchar(36) NULL,
        [LastModifiedDateUTC] datetime2 NOT NULL,
		[iOperation] int NOT NULL,
		CONSTRAINT [PK_StripePaymentMethodHistory] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO
/*************************************************************************END StripePaymentMethodHistory*************************************************************************/

/*************************************************************************START TaxJarCache*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TaxJarCache')
BEGIN
	CREATE TABLE [TaxJarCache] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [fkCompanyID] varchar(36) NOT NULL,
		[sTaxResponseAttributes] varchar(MAX) NOT NULL,
		[dtLastUpdatedDateUTC] datetime2 NOT NULL,
		CONSTRAINT PK_TaxJarCache PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],
		CONSTRAINT FK_TaxJarCache_Company_ID FOREIGN KEY([fkCompanyID]) REFERENCES Company ([ID])
	) ON [PRIMARY];
END
GO
/*************************************************************************END TaxJarCache*************************************************************************/

/*************************************************************************START UserAccessLog*************************************************************************/
IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'UserAccessLog')
BEGIN
	CREATE TABLE [UserAccessLog] (
        [ID] varchar(36) NOT NULL DEFAULT(LOWER(NEWID())),
        [sUserName] nvarchar(256) NOT NULL,
        [iAction] int NOT NULL,
		[iEntryPoint] int NOT NULL,
        [dtTimeStampUTC] datetime2 NOT NULL,
		CONSTRAINT [PK_UserAccessLog] PRIMARY KEY CLUSTERED 
		(
			[ID] ASC
		)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY];
END
GO
/*************************************************************************END UserAccessLog*************************************************************************/